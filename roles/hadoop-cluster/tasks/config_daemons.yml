---

- name: configure user's ssh keys
  copy:
    src: "{{ playbook_dir }}/roles/local_prepare/sshkeys/{{ item.private_key }}"
    dest: "/home/{{ item.user }}/.ssh/{{ item.file }}"
    owner: "{{ item.user }}"
    group: "{{ hadoop_group }}"
    mode: 0600
#  when: item.cond
  with_items:
    - {private_key: hadoop_rsa, file: id_rsa, user: "{{ hadoop_user }}", cond: "{{ is_resource_mgr or is_namenode }}" }
    - {private_key: hdfs_rsa, file: id_rsa, user: "{{ hdfs_user }}", cond: "{{ is_namenode }}"}
    - {private_key: yarn_rsa, file: id_rsa, user: "{{ yarn_user }}", cond: "{{ is_resource_mgr }}"}
    - {private_key: hadoop_rsa.pub, file: id_rsa.pub, user: "{{ hadoop_user }}", cond: true}
    - {private_key: hdfs_rsa.pub, file: id_rsa.pub, user: "{{ hdfs_user }}", cond: true}
    - {private_key: yarn_rsa.pub, file: id_rsa.pub, user: "{{ yarn_user }}", cond: true}


- name: mkdir hadoop_conf_dir
  file: path="{{ hadoop_conf_dir }}" state=directory
- name: create temporary hadoop_conf directory
  tempfile: state=directory
  register: hadoop_conf_temp
- name: copy hadoop_conf files
  shell: |
    cp -rf {{ hadoop_path }}/etc/hadoop/* {{ hadoop_conf_temp.path }}
    rm {{ hadoop_conf_temp.path }}/core-site.xml
    rm {{ hadoop_conf_temp.path }}/hdfs-site.xml
    rm {{ hadoop_conf_temp.path }}/yarn-site.xml
    rm {{ hadoop_conf_temp.path }}/mapred-site.xml
    cp -rf {{ hadoop_conf_temp.path }}/* {{ hadoop_conf_dir }}
- name: configure daemons conf file
  template:
    src: ../templates/{{ item.template }}
    dest: "{{ hadoop_conf_dir }}/{{ item.file }}"
  with_items:
    - {template: core-site.xml.j2, file: core-site.xml}
    - {template: hdfs-site.xml.j2, file: hdfs-site.xml}
    - {template: yarn-site.xml.j2, file: yarn-site.xml}
    - {template: mapred-site.xml.j2, file: mapred-site.xml}
- name: Copy slaves into place
  template:
    src: ../templates/slaves
    dest: "{{ hadoop_conf_dir }}/slaves"
  when: is_resource_mgr or is_namenode
- name: export HADOOP_CONF_DIR ...
  lineinfile:
    dest: /etc/environment
    regexp: '^HADOOP_CONF_DIR='
    line: HADOOP_CONF_DIR={{ hadoop_conf_dir }}
- name: export HADOOP_CONF_DIR ... (for RedHat)
  lineinfile:
    dest: "{{ sys_profile }}"
    regexp: '^export HADOOP_CONF_DIR='
    line: export HADOOP_CONF_DIR={{ hadoop_conf_dir }}
  when: ansible_os_family == "RedHat"


- name: mkdir HADOOP_LOG_DIR
  file: path="/home/{{ item }}/logs" state=directory  owner="{{ item }}" group="{{ hadoop_group}}"
  with_items: "{{ hadoop_users }}"
- name: export LOG_DIRs
  blockinfile:
    dest: /home/{{ item }}/{{ user_env_file }}
    # path: /home/{{ item }}/{{ user_bashrc }}
    backup: yes
    block: |
      export HADOOP_LOG_DIR=/home/{{ item }}/logs
      export HDFS_LOG_DIR=/home/{{ item }}/logs
      export YARN_LOG_DIR=/home/{{ item }}/logs
      export HADOOP_MAPRED_LOG_DIR=/home/{{ item }}/logs
  with_items: "{{ hadoop_users }}"


