---

- name: configure ssh keys
  copy:
    src: ../files/sshkeys/{{ item.private_key }}
    dest: "/home/{{ item.user }}/.ssh/{{ item.file }}"
    owner: "{{ item.user }}"
    group: "{{ hadoop_group }}"
    mode: 0600
#  when: item.cond
  with_items:
    - {private_key: hadoop_rsa, file: id_rsa, user: "{{ hadoop_user }}", cond: "{{ is_resource_mgr or is_namenode }}" }
    - {private_key: hdfs_rsa, file: id_rsa, user: "{{ hdfs_user }}", cond: "{{ is_namenode }}"}
    - {private_key: yarn_rsa, file: id_rsa, user: "{{ yarn_user }}", cond: "{{ is_resource_mgr }}"}
    - {private_key: hadoop_rsa.pub, file: id_rsa.pub, user: "{{ hadoop_user }}", cond: true}
    - {private_key: hdfs_rsa.pub, file: id_rsa.pub, user: "{{ hdfs_user }}", cond: true}
    - {private_key: yarn_rsa.pub, file: id_rsa.pub, user: "{{ yarn_user }}", cond: true}

- name: ensure hadoop_conf_dir dir
  file: path="{{ hadoop_conf_dir }}" state=directory

- name: copy files
  shell: cp -rf {{ hadoop_path }}/etc/hadoop/* {{ hadoop_conf_dir }}

- name: configure daemons conf file
  template:
    src: ../templates/{{ item.template }}
    dest: "{{ hadoop_conf_dir }}/{{ item.file }}"
  with_items:
    - {template: core-site.xml.j2, file: core-site.xml}
    - {template: hdfs-site.xml.j2, file: hdfs-site.xml}
    - {template: yarn-site.xml.j2, file: yarn-site.xml}
    - {template: mapred-site.xml.j2, file: mapred-site.xml}
  
- name: Copy slaves into place
  template:
    src: ../templates/slaves
    dest: "{{ hadoop_conf_dir }}/slaves"
    # owner: "{{ hadoop_user }}"
    # group: "{{ hadoop_group}}"
  when: is_resource_mgr or is_namenode

- name: ensure HADOOP_LOG_DIR dir
  file: path="/home/{{ item }}/logs" state=directory  owner="{{ item }}" group="{{ hadoop_group}}"
  with_items:
    - "{{ hadoop_user }}"
    - "{{ hdfs_user }}"
    - "{{ yarn_user }}"
    - "{{ mapred_user }}"

- name: export HADOOP_CONF_DIR ...
  lineinfile:
    dest: /etc/environment
    regexp: '^export HADOOP_CONF_DIR='
    line: export HADOOP_CONF_DIR={{ hadoop_conf_dir }}

- name: export LOG_DIRs
  blockinfile:
    dest: /home/{{ item }}/.bashrc
    # path: /home/{{ item }}/{{ user_profile }}
    backup: yes
    block: |
      export HADOOP_LOG_DIR=/home/{{ item }}/logs
      export HDFS_LOG_DIR=/home/{{ item }}/logs
      export YARN_LOG_DIR=/home/{{ item }}/logs
      export HADOOP_MAPRED_LOG_DIR=/home/{{ item }}/logs
  with_items:
    - "{{ hadoop_user }}"
    - "{{ hdfs_user }}"
    - "{{ yarn_user }}"
    - "{{ mapred_user }}"

