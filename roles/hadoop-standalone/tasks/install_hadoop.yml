---

- name: delete hadoop installation
  file: path="{{ hadoop_path }}" state=absent
  when: fresh_unzip
- name: delete hadoop_conf_dir
  file: path="{{ hadoop_conf_dir }}" state=absent
  when: fresh_unzip
- name: delete hadoop-data
  file: path="/home/{{ hadoop_user }}/hadoop-data" state=absent
  when: drop_data

- name: mkdir hadoop
  file: path="{{ hadoop_dirname }}" state=directory
- name: upload hadoop tar file
  copy:
    src: "{{ playbook_dir }}/roles/local_prepare/files/{{ hadoop_tar_filename }}"
    dest: "{{ hadoop_dirname }}/{{ hadoop_tar_filename }}"
- name: check unarchive hadoop directory
  stat: path="{{ hadoop_path }}"
  register: hadoopfstat
- name: unarchive hadoop
  unarchive:
    src: "{{ hadoop_dirname }}/{{ hadoop_tar_filename }}"
    dest: "{{ hadoop_dirname }}"
    remote_src: True
  when: not hadoopfstat.stat.exists

# - name: upload hadoop file for debug
#   copy:
#     src: files/{{ hadoop_basename }}
#     dest: "{{ hadoop_dirname }}"

- name: export HADOOP_HOME, HADOOP_PREFIX ...
  lineinfile:
    dest: /etc/environment
    regexp: '^{{ item }}='
    line: '{{ item }}={{ hadoop_dirname }}/{{ hadoop_basename }}'
  with_items: [ "HADOOP_HOME", "HADOOP_PREFIX", "HADOOP_HDFS_HOME", "HADOOP_YARN_HOME"]
- name: export HADOOP_HOME to PATH
  lineinfile:
    dest: '{{ sys_bashrc }}'
    line: 'export PATH=$PATH:$HADOOP_HOME/bin'

- name: fetch JAVA_HOME
  command: /bin/bash -l -c "echo $JAVA_HOME"
  changed_when: false
  register: fetch_java_home
- set_fact: java_home_fact="{{ fetch_java_home.stdout }}"
- debug: msg="JAVA_HOME={{ java_home_fact}}"
- name: set hadoop JAVA_HOME
  lineinfile:
    dest: "{{ hadoop_path }}/etc/hadoop/hadoop-env.sh"
    regexp: '^export JAVA_HOME='
    line: 'export JAVA_HOME={{ java_home_fact}}'

