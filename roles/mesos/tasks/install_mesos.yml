---


- include_vars: '{{ item }}'
  with_first_found:
  - files:
      - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
      - '{{ ansible_distribution }}.yml'
      - '{{ ansible_os_family }}.yml'
      - 'default{{ python_suffix }}.yml'
      - 'default.yml'
    paths: '{{ role_path }}/vars/os'
- set_fact:
    mesos_path: '{{ mesos_res.install_dir }}/{{ mesos_res.basename}}'

# Download and unzip
- name: Present install path '{{ "[" }}{{ pkg_ic.install_path }}{{ "]" }}'
  file: path="{{ pkg_ic.install_path }}" state=directory
- name: Download {{ pkg_ic.file }}
  cached_get_url:
    cached: "{{ resource_cache }}/{{ pkg_ic.file }}"
    url: "{{ pkg_ic.url }}"
    dest: '{{ pkg_ic.install_path }}/{{ pkg_ic.file }}'
- name: Unarchive package
  unarchive:
    src: "{{ pkg_ic.install_path }}/{{ pkg_ic.file }}"
    dest: "{{ pkg_ic.install_path }}"
    remote_src: yes

# ssh setting
- name: Install the dependence packages
  package: name="{{ item }}" state=present
  with_items: '{{ dependencies }}'

# # make install
# - name: make install
#   shell: |
#     mkdir build
#     cd build
#     ../configure
#     make
#   args:
#     chdir: "{{ pkg_ic.install_path }}/{{ pkg_ic.basename}}"

# - name: check python installation
#   shell: "{{ python_x}} --version 2>&1"
#   register: python_v
#   changed_when: False
#   failed_when: "( python_v | failed ) or ( python_v_expect not in python_v.stdout )"

