---

- set_fact:
    hadoop_path: '{{ pkg_ic.install_path }}/{{ pkg_ic.basename}}'
# delete hadoop installation, configuration and data
- name: delete hadoop installation
  file: path="{{ hadoop_path }}" state=absent
  when: (fresh_unzip is defined) and fresh_unzip
- name: delete hadoop_conf_dir
  file: path="{{ hadoop_conf_dir }}" state=absent
  when: (fresh_unzip is defined) and fresh_unzip
- name: delete hadoop-data
  file: path="/home/{{ item[0] }}/{{ item[1]}}" state=absent
  when: (drop_data is defined) and drop_data
  with_nested:
    - "{{ hadoop_users }}"
    - ['hadoop-data','logs']


- name: download and unzip
  include_role:
    name: basic/download_and_unzip
  vars:
    pkg_conf: '{{ pkg_ic }}'

# export HADOOP environment variables
- name: export HADOOP_HOME, HADOOP_PREFIX ...
  blockinfile:
    path: /etc/environment
    marker: "# {mark} HADOOP BLOCK"
    block: |
      HADOOP_HOME={{ hadoop_path }}
      HADOOP_PREFIX={{ hadoop_path }}
      HADOOP_HDFS_HOME={{ hadoop_path }}
      HADOOP_YARN_HOME={{ hadoop_path }}
- name: export HADOOP_HOME, HADOOP_PREFIX ... (for RedHat)
  blockinfile:
    path: "{{ sys_profile }}"
    marker: "# {mark} HADOOP BLOCK"
    block: |
      export HADOOP_HOME={{ hadoop_path }}
      export HADOOP_PREFIX={{ hadoop_path }}
      export HADOOP_HDFS_HOME={{ hadoop_path }}
      export HADOOP_YARN_HOME={{ hadoop_path }}

#  when: ansible_os_family == "RedHat"
- name: export HADOOP_HOME to PATH
  lineinfile:
    dest: '{{ sys_profile }}'
    line: 'export PATH=$PATH:$HADOOP_HOME/bin'
- name: fetch JAVA_HOME
  command: /bin/bash -l -c "echo $JAVA_HOME"
  changed_when: false
  register: fetch_java_home
- debug: msg="JAVA_HOME={{ fetch_java_home.stdout}}"
- name: set hadoop JAVA_HOME
  lineinfile:
    dest: "{{ hadoop_path }}/etc/hadoop/hadoop-env.sh"
    regexp: '^export JAVA_HOME='
    line: 'export JAVA_HOME={{ fetch_java_home.stdout}}'

