---

# Configure /etc/hosts
- name: update /etc/hosts {{ ":" }} drop 127.0.0.1 to hostname (avoid address binding problem)
  lineinfile:
    dest: /etc/hosts
    regexp: '^(127\.0\.0\.1)(.*?)({{ ansible_hostname }})$'
    line: '#\1\2\3'
    backrefs: yes
- name: update /etc/hosts {{ ":" }} add hostnames
  lineinfile:
    dest: /etc/hosts
    # regexp: '^({{ item.ip }})?(.*?)(\s)?({{ item.hostname }})?'
    # line: '{{ item.ip }}\2 {{ item.hostname }}'
    # backrefs: yes
    regexp: '^{{ item.ip }}(\s)*({{ item.hostname }})?$'
    line: '{{ item.ip }} {{ item.hostname }}'
  with_items: "{{ cluster_nodes.nodes }}"
  when: cluster_mode

# Configure Users
- group: name={{ hadoop_group }} state=present
- user: name={{ item }} comment={{ item}} group={{ hadoop_group }} shell=/bin/bash password=hadoop
  with_items: "{{ hadoop_users }}"
- authorized_key: user={{ item }} key="{{ lookup('file', '{{ playbook_dir }}/roles/local_prepare/sshkeys/{{ item }}_rsa.pub') }}"
  with_items: "{{ hadoop_users }}"
- name: configure user's ssh keys
  copy:
    src="{{ playbook_dir }}/roles/local_prepare/sshkeys/{{ item.key }}"
    dest="/home/{{ item.user }}/.ssh/{{ item.file }}"
    owner="{{ item.user }}" group="{{ hadoop_group }}" mode=0600
#  when: item.cond
  with_items:
    - {key: hadoop_rsa, file: id_rsa, user: "{{ hadoop_user }}", cond: "{{ is_resource_mgr or is_namenode }}" }
    - {key: hdfs_rsa, file: id_rsa, user: "{{ hdfs_user }}", cond: "{{ is_namenode }}"}
    - {key: yarn_rsa, file: id_rsa, user: "{{ yarn_user }}", cond: "{{ is_resource_mgr }}"}
    - {key: hadoop_rsa.pub, file: id_rsa.pub, user: "{{ hadoop_user }}", cond: true}
    - {key: hdfs_rsa.pub, file: id_rsa.pub, user: "{{ hdfs_user }}", cond: true}
    - {key: yarn_rsa.pub, file: id_rsa.pub, user: "{{ yarn_user }}", cond: true}

# Configure ~user/.ssh/known_hosts
- name: ssh-keyscan {{ ":" }} localhost
  shell: ssh-keyscan -t rsa {{ item}}
  changed_when: false
  register: keyscan_localhost
  with_items: ['0.0.0.0', 'localhost']
- name: update known_hosts {{ ":" }} add localhost
  lineinfile: dest=/home/{{ hadoop_user }}/.ssh/known_hosts create=yes state=present owner={{ hadoop_user }} group={{ hadoop_group }} line="{{ item.stdout }}" regexp="^{{ item.item }}"
  with_items: "{{ keyscan_localhost.results }}"
- name: ssh-keyscan {{ ":" }} hostnames
  shell: ssh-keyscan -t rsa {{ item.hostname }}
  with_items: "{{ cluster_nodes.nodes }}"
  changed_when: false
  register: keyscans
  when: cluster_mode
- name: update known_hosts {{ ":" }} add hostnames
  lineinfile: dest=/home/{{ hadoop_user }}/.ssh/known_hosts create=yes state=present owner={{ hadoop_user }} group={{ hadoop_group }} line="{{ item.stdout }}" regexp="^{{ item.item.hostname }}"
  with_items: "{{ keyscans.results }}"
  when: cluster_mode
- name: copy known_hosts
  shell: |
    cp -f /home/{{ hadoop_user }}/.ssh/known_hosts /home/{{ item }}/.ssh/known_hosts
    chown {{ item}}:{{ hadoop_group}} /home/{{ item }}/.ssh/known_hosts
  with_items:
    - "{{ hdfs_user }}"
    - "{{ yarn_user }}"
    - "{{ mapred_user }}"
  changed_when: false

